列表简介
-列表由一系列按特定顺序排序的元素组成 字母、数字。使用[]来表示列表、逗号分隔
name = [ '张三','李四','王五','赵六']

访问列表元素
列表是有序集合，访问列表中任何元素，只需将元素的位置或索引告诉Python即可。
name[0] ： 返回第一个列表元素
name[-1] : 返回最后一个列表元素

修改、添加、删除元素
name[0] = '林七' ：修改第一个元素
name.append('林八') ：在列表最后面添加一个元素
name.insert(0,'林六') ： 在列表索引0处插入一个元素
del.name[0] : 删除列表第一个元素
name.pop() : 弹出最后一个元素
name.pop(0) : 弹出第一个元素（pop()可以弹出任意位置的元素）
name.pop(1) ：弹出第二个元素
根据值删除元素
如果只知道要删除的元素的值，可以使用remove()，remove从列表中删除元素，可以接着使用它的值
name.remove('王五')
注意：方法remove() 值删除第一个指定的值，如果要删除的值可以能在列表中出现多次，就需要使用循环来判断是否删除了所有这样的值。

组织列表
name.sort() : 使用方法sort()对列表进行永久性排序
name.sort(reverse=true) : 按照字母顺序相反的顺序排序
sorted(name) : 使用函数sorted() 对列表进行顺序临时排序
sorted(name,reverse=true) : 使用函数sorted() 对列表进行逆序临时排序
name.reverse() : reverse()不是指按有字母顺序相反的顺序排序列表元素，而只是反转列表元素的排序顺序，它是永久性的修改列表元素的排序顺序
len(name) : 获取列表的长度

使用列表时避免索引错误
每当需要访问最后一个列表元素时，都可以使用索引-1，仅当列表为空的时候，访问最后一个原生才会发生错误


